# Autonomous Navigation with ROS

The goal of this project is to enable a robot to autonomously navigate an environment and locate a maximum number of objects of interest within a given time frame. The robot has access to a map of the environment, which includes walls and terrain but does not include the objects of interest or objects to avoid. The robot is equipped with an RGB camera, a depth camera, and a laser scanner, and it uses these sensors to localize itself and update the map with the locations of objects.

## Program Layout

## Catkin setup 
- General installations
```bash
$ sudo apt install python3
$ sudo apt install python
$ sudo apt install python-pip
$ sudo apt install python3-pip
$ sudo apt install curl
$ sudo apt update
$ sudo apt install ros-melodic-desktop-full
$ sudo apt update
$ sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
```
- Setting up ROS
- - Sometimes you just have to spam this 
```bash
$ curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -
``` 
```bash
$ echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc
$ source ~/.bashrc
```
```bash
$ sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential
```
```bash
$ sudo apt install python-rosdep
$ sudo rosdep init
$ rosdep update
$ sudo apt-get update && sudo apt-get dist-upgrade
$ sudo apt-get update && sudo apt-get upgrade
```
```bash
$ sudo apt-get install ros-melodic-joy ros-melodic-teleop-twist-joy ros-melodic-teleop-twist-keyboard ros-melodic-laser-proc ros-melodic-rgbd-launch ros-melodic-depthimage-to-laserscan ros-melodic-rosserial-arduino ros-melodic-rosserial-python ros-melodic-rosserial-server ros-melodic-rosserial-client ros-melodic-rosserial-msgs ros-melodic-amcl ros-melodic-map-server ros-melodic-move-base ros-melodic-urdf ros-melodic-xacro ros-melodic-compressed-image-transport ros-melodic-rqt-image-view ros-melodic-gmapping ros-melodic-navigation ros-melodic-interactive-markers
```
- Install packages for working version
```bash
$ sudo apt install python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential
$ sudo apt install python-rosdep
$ mkdir -p ~/catkin_ws/src
$ cd ~/catkin_ws/src
$ catkin_make
$ git clone https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git
$ git clone -b melodic-devel https://github.com/ROBOTIS-GIT/turtlebot3.git
$ git clone https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git
$ cd ~/catkin_ws && catkin_make
```

Install team git
```bash
git clone https://projects.cs.nott.ac.uk/comp4034-ars-2022/ars-2022-g27.git
```
```bash
$ rosdep update
$ rosdep install --from-paths src --ignore-src -r -y
$ sudo apt-get update
$ sudo apt-get install python-catkin-tools python-rosdep python-wstool
``` 
- External Packages
```bash
$ sudo apt-get install ros-melodic-navigation
$ sudo apt-get install ros-melodic-robot-localization
$ git clone -b melodic-devel https://github.com/cra-ros-pkg/robot_localization.git
$ catkin_make
```
```bash
$ git clone -b master https://github.com/adler-1994/gmcl src/gmcl
$ catkin_make
``` 





- python installations 
```bash
$ sudo apt install python
$ sudo apt install python-rosdep
$ sudo apt install python3 
$ sudo apt install python-pip 
$ sudo apt install python-pip3
```
- Check install 
```
$ rosdep update
$ rosdep install --from-paths src --ignore-src -r -y
$ sudo apt-get update
$ sudo apt-get install python-catkin-tools python-rosdep python-wstool
```
- Packages
```bash
$ sudo apt-get install ros-melodic-navigation
$ sudo apt-get install ros-melodic-robot-localization
$ git clone -b melodic-devel https://github.com/cra-ros-pkg/robot_localization.git
$ run rosdep install --from-paths . --ignore-src --rosdistro melodic
$ git clone https://github.com/appliedAI-Initiative/orb_slam_2_ros.git
$ git clone -b master https://github.com/adler-1994/gmcl src/gmcl
$ catkin_make
```

## Running the code
- Set up the environment
```bash
$ cd ~/<catkin_ws>
$ catkin_make
```
- Launch the gazebo map
```bash
$ roslaunch minitask5 turtlebot3_training.launch
```
- Launch the script
```bash
$ roslaunch minitask5 minitask5.launch 
``` 


# Scenario Description

## Objects in scenario
### Objects of Interest
- Red fire hydrants 
- Green Boxes 
### Objects to avoid 
- Non-static / Non colour specific objects (Beer cans, BBQ...)
- Blue floor tiles


## Localization and Mapping

## Path Planning

## Object Recognition and Perception

## Acknowledgements 

## Citations
